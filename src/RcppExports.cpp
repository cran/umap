// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// clip4
NumericVector clip4(NumericVector x, double inner, double outer);
RcppExport SEXP _umap_clip4(SEXP xSEXP, SEXP innerSEXP, SEXP outerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type inner(innerSEXP);
    Rcpp::traits::input_parameter< double >::type outer(outerSEXP);
    rcpp_result_gen = Rcpp::wrap(clip4(x, inner, outer));
    return rcpp_result_gen;
END_RCPP
}
// dEuclidean
double dEuclidean(NumericVector& x, NumericVector y);
RcppExport SEXP _umap_dEuclidean(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(dEuclidean(x, y));
    return rcpp_result_gen;
END_RCPP
}
// mdEuclidean
NumericVector mdEuclidean(NumericMatrix& m);
RcppExport SEXP _umap_mdEuclidean(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(mdEuclidean(m));
    return rcpp_result_gen;
END_RCPP
}
// dManhattan
double dManhattan(NumericVector& x, NumericVector y);
RcppExport SEXP _umap_dManhattan(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(dManhattan(x, y));
    return rcpp_result_gen;
END_RCPP
}
// mdManhattan
NumericVector mdManhattan(NumericMatrix& m);
RcppExport SEXP _umap_mdManhattan(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(mdManhattan(m));
    return rcpp_result_gen;
END_RCPP
}
// dCenteredPearson
double dCenteredPearson(NumericVector& x, NumericVector y);
RcppExport SEXP _umap_dCenteredPearson(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(dCenteredPearson(x, y));
    return rcpp_result_gen;
END_RCPP
}
// mdCenteredPearson
NumericVector mdCenteredPearson(NumericMatrix& m);
RcppExport SEXP _umap_mdCenteredPearson(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(mdCenteredPearson(m));
    return rcpp_result_gen;
END_RCPP
}
// dCosine
double dCosine(NumericVector& x, NumericVector y);
RcppExport SEXP _umap_dCosine(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(dCosine(x, y));
    return rcpp_result_gen;
END_RCPP
}
// mdCosine
NumericVector mdCosine(NumericMatrix& m);
RcppExport SEXP _umap_mdCosine(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(mdCosine(m));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_umap_clip4", (DL_FUNC) &_umap_clip4, 3},
    {"_umap_dEuclidean", (DL_FUNC) &_umap_dEuclidean, 2},
    {"_umap_mdEuclidean", (DL_FUNC) &_umap_mdEuclidean, 1},
    {"_umap_dManhattan", (DL_FUNC) &_umap_dManhattan, 2},
    {"_umap_mdManhattan", (DL_FUNC) &_umap_mdManhattan, 1},
    {"_umap_dCenteredPearson", (DL_FUNC) &_umap_dCenteredPearson, 2},
    {"_umap_mdCenteredPearson", (DL_FUNC) &_umap_mdCenteredPearson, 1},
    {"_umap_dCosine", (DL_FUNC) &_umap_dCosine, 2},
    {"_umap_mdCosine", (DL_FUNC) &_umap_mdCosine, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_umap(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
